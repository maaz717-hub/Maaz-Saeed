# -*- coding: utf-8 -*-
"""𝗦𝗲𝘁𝘀, 𝗙𝗿𝗼𝘇𝗲𝗻𝘀𝗲𝘁 & 𝗚𝗮𝗿𝗯𝗮𝗴𝗲 𝗖𝗼𝗹𝗹𝗲𝗰𝘁𝗶𝗼𝗻 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PP6OXExkZd61pBi-7i1NjImKfsR0Z5nU

1: Create a set of 5 fruits and print it.
"""

my_set = {"Mango","Apple","Banana","Orange","Grapes"}
print(my_set)

"""2: Add one new fruit to your set using .add() and print the updated set."""

my_set = {"Mango","Apple","Banana","Orange","Grapes"}
my_set.add("watermelon")
print(my_set)

"""3: Remove an existing fruit using .remove() (and explain if it errors when missing)."""

my_set = {"Mango","Apple","Banana","Orange","Grapes"}
my_set.remove("Banana")
print(my_set)

"""4: Remove another fruit using .discard() (and note the difference from .remove())."""

my_set = {"Mango","Apple","Banana","Orange","Grapes"}
my_set.discard("Apple")
print(my_set)

"""5: Use .pop() to remove an arbitrary item and print the result."""

my_set = {"Mango","Apple","Banana","Orange","Grapes"}
removed_item = my_set.pop()
print(removed_item)
print(my_set)

"""6: Clear the remaining items using .clear() and show that the set is now empty."""

my_set = {"Mango","Apple","Banana","Orange","Grapes"}
my_set.clear()
print("Clear Set:",my_set)

"""7: Create two sets of numbers and display their union(), intersection(), difference(), symmetric_difference()."""

my_set1 = {1,2,3,4,5}
my_set2 = {1,2,3,4,5,6,7}
print("Union :" ,my_set1.union(my_set2))
print("Intersection :" ,my_set1.intersection(my_set2))
print("Difference :" ,my_set2.difference(my_set1))
print("symmetric_difference :" ,my_set1.symmetric_difference(my_set2))

"""8: Check if one set is a subset or superset of another, and print results."""

my_set1 = {1,2,3,4,5}
my_set2 = {1,2,3,4,5,6,7}

print("Is set1 a subset of set2?:", my_set1.issubset(my_set2))
print("Is set2 a superset of set1?:", my_set2.issuperset(my_set1))

"""9: Declare a frozenset of vowels and try adding an item — observe the immutability error."""

vowels = frozenset({"a", "e", "i", "o", "u"})
print("Frozenset of vowels:", vowels)

try:
    vowels.add("y")
except AttributeError as e:
    print("Error when trying to add to frozenset:", e)

"""10: Use a loop to check membership of a user-input character in the set of vowels."""

vowels = {"a", "e", "i", "o", "u"}
char_input = input("Enter a character to check if it is a vowel: ").lower()

is_vowel = False
for vowel in vowels:
    if char_input == vowel:
        is_vowel = True
        break

if is_vowel:
    print(f"'{char_input}' is a vowel.")
else:
    print(f"'{char_input}' is not a vowel.")